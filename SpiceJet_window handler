package runner;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.events.EventFiringDecorator;
import org.openqa.selenium.support.events.WebDriverListener;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.testng.annotations.AfterMethod;
import utils.EventHandler;
import java.time.Duration;


public class TestSpice {
    public static WebDriver driver;
    
    @BeforeMethod
    public void openBrowser() throws MalformedURLException {
        ChromeOptions options = new ChromeOptions();
        driver = new RemoteWebDriver(new URL("http://localhost:4444/"), options);
        
        WebDriverListener listener = new EventHandler();
        driver = new EventFiringDecorator<>(listener).decorate(driver);
        driver.get("https://www.spicejet.com/");
        driver.manage().window().maximize();
    }
    @Test
    public void tescase1() {
    try {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(15));
        
        WebElement signupButton = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[text()='Signup']")));
        signupButton.click();

        Thread.sleep(5000); 

        String parentWindow = driver.getWindowHandle();
        Set<String> allWindows = driver.getWindowHandles();

        for (String windowHandle : allWindows) {
            if (!windowHandle.equals(parentWindow)) {
                driver.switchTo().window(windowHandle);
                break;
            }
        }

        System.out.println("Child Page Title: " + driver.getTitle());
        assert driver.getTitle().contains("SpiceJet");

    } catch (Exception e) {
        e.printStackTrace();
    }

    }

    @Test
    public void testcase2(){
        try {
            WebDriverWait wait = new WebDriverWait(driver,Duration.ofSeconds(20));
            Actions actions = new Actions(driver);
            
            WebElement spiceclub = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("(//div[text() = 'SpiceClub'])[1]")));
            actions.moveToElement(spiceclub).perform();

            WebElement creditCardOption = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[text() = 'Credit Cards']")));
            creditCardOption.click();

            String parentWindow = driver.getWindowHandle();
            Set<String> allWindows = driver.getWindowHandles();

            for (String windowHandle : allWindows) {
                if (!windowHandle.equals(parentWindow)) {
                    driver.switchTo().window(windowHandle);
                    break;
                }
            }

            Thread.sleep(5000);
            JavascriptExecutor js = (JavascriptExecutor) driver;
            js.executeScript("window.scrollBy(0, 500);");
            Thread.sleep(5000);
            WebElement applyNowBtn = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("(//button[contains(text(),'Apply Now')])[1]")));
            applyNowBtn.click();
            Thread.sleep(5000);
            WebElement inputField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@type='tel'")));
            inputField.sendKeys("9876543210");
            Thread.sleep(5000);
            WebElement cancelButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[text()='Cancel']")));
            cancelButton.click();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    @AfterMethod
    public void closeBrowser() {
        if (driver != null) {
            driver.quit();
        }
    }
}
